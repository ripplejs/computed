(function(){function e(r,t,n){var o=e.resolve(r);if(null==o){n=n||r,t=t||"root";var i=Error('Failed to require "'+n+'" from "'+t+'"');throw i.path=n,i.parent=t,i.require=!0,i}var s=e.modules[o];if(!s._resolving&&!s.exports){var a={};a.exports={},a.client=a.component=!0,s._resolving=!0,s.call(this,a.exports,e.relative(o),a),delete s._resolving,s.exports=a.exports}return s.exports}e.modules={},e.aliases={},e.resolve=function(r){"/"===r.charAt(0)&&(r=r.slice(1));for(var t=[r,r+".js",r+".json",r+"/index.js",r+"/index.json"],n=0;t.length>n;n++){var r=t[n];if(e.modules.hasOwnProperty(r))return r;if(e.aliases.hasOwnProperty(r))return e.aliases[r]}},e.normalize=function(e,r){var t=[];if("."!=r.charAt(0))return r;e=e.split("/"),r=r.split("/");for(var n=0;r.length>n;++n)".."==r[n]?e.pop():"."!=r[n]&&""!=r[n]&&t.push(r[n]);return e.concat(t).join("/")},e.register=function(r,t){e.modules[r]=t},e.alias=function(r,t){if(!e.modules.hasOwnProperty(r))throw Error('Failed to alias "'+r+'", it does not exist');e.aliases[t]=r},e.relative=function(r){function t(e,r){for(var t=e.length;t--;)if(e[t]===r)return t;return-1}function n(t){var o=n.resolve(t);return e(o,r,t)}var o=e.normalize(r,"..");return n.resolve=function(n){var i=n.charAt(0);if("/"==i)return n.slice(1);if("."==i)return e.normalize(o,n);var s=r.split("/"),a=t(s,"deps")+1;return a||(a=0),n=s.slice(0,a+1).join("/")+"/deps/"+n},n.exists=function(r){return e.modules.hasOwnProperty(n.resolve(r))},n},e.register("computed/index.js",function(e,r,t){t.exports=function(e){function r(){return n=[]}function t(){n=null}var n,o=e.prototype.get;e.computed=function(n,o,i){var s=Array.prototype.slice.call(arguments);return e.on("created",function(e){if(2===s.length){i=s[1],o=r(),i.call(e),t();var a=function(){e.set(n,i.call(e))}}else var a=function(){var r=o.map(e.get.bind(e));e.set(n,i.apply(e,r))};e.watch(o,a),a()}),this},e.prototype.get=function(e){return n&&n.push(e),o.apply(this,arguments)}}}),"object"==typeof exports?module.exports=e("computed"):"function"==typeof define&&define.amd?define([],function(){return e("computed")}):this.ripple.computed=e("computed")})();